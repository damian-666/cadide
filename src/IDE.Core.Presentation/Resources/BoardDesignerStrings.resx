<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddElectricalClearanceRuleTooltip" xml:space="preserve">
    <value>Add Electrical Clearance rule</value>
  </data>
  <data name="AddGroupRuleTooltip" xml:space="preserve">
    <value>Add group</value>
  </data>
  <data name="AddHoleSizeRuleTooltip" xml:space="preserve">
    <value>Add Hole size rule</value>
  </data>
  <data name="AddManufacturingClearanceRuleTooltip" xml:space="preserve">
    <value>Add Manufacturing clearance rule</value>
  </data>
  <data name="AddMaskExpansionRuleTooltip" xml:space="preserve">
    <value>Add Mask Expansion rule</value>
  </data>
  <data name="AddNewDielectricLayerTooltip" xml:space="preserve">
    <value>Add a new dielectric layer</value>
  </data>
  <data name="AddNewDrillPairTooltip" xml:space="preserve">
    <value>Add a new drill pair</value>
  </data>
  <data name="AddNewGenericLayerTooltip" xml:space="preserve">
    <value>Add a new generic layer</value>
  </data>
  <data name="AddNewLayerGroupTooltip" xml:space="preserve">
    <value>Add a new layer group</value>
  </data>
  <data name="AddNewLayerPairTooltip" xml:space="preserve">
    <value>Add a new layer pair</value>
  </data>
  <data name="AddNewMechanicalLayerTooltip" xml:space="preserve">
    <value>Add a new mechanical layer</value>
  </data>
  <data name="AddNewPlaneLayerTooltip" xml:space="preserve">
    <value>Add a new plane layer</value>
  </data>
  <data name="AddNewSignalLayerTooltip" xml:space="preserve">
    <value>Add a new signal layer</value>
  </data>
  <data name="AddTrackWidthRuleTooltip" xml:space="preserve">
    <value>Add Track Width rule</value>
  </data>
  <data name="AddViaDefinitionRuleTooltip" xml:space="preserve">
    <value>Add Via definition rule</value>
  </data>
  <data name="AppliesForLabel" xml:space="preserve">
    <value>Applies for</value>
  </data>
  <data name="AssemblyDrawingsText" xml:space="preserve">
    <value>Assembly drawings</value>
  </data>
  <data name="AssemblyTabHeader" xml:space="preserve">
    <value>Assembly</value>
  </data>
  <data name="AssignedLayersLabel" xml:space="preserve">
    <value>Assigned layers</value>
  </data>
  <data name="AvailableLayersLabel" xml:space="preserve">
    <value>Available layers</value>
  </data>
  <data name="BOMTabHeader" xml:space="preserve">
    <value>BOM</value>
  </data>
  <data name="BottomLayerColumnHeader" xml:space="preserve">
    <value>Bottom Layer</value>
  </data>
  <data name="ClearanceLabel" xml:space="preserve">
    <value>Clearance</value>
  </data>
  <data name="ColumnNameColumnHeader" xml:space="preserve">
    <value>Column Name</value>
  </data>
  <data name="ColumnsText" xml:space="preserve">
    <value>Columns</value>
  </data>
  <data name="CreateZipFileForBoard" xml:space="preserve">
    <value>Create zip file for board</value>
  </data>
  <data name="CurrentSchematicText" xml:space="preserve">
    <value>Current schematic</value>
  </data>
  <data name="DescriptionText" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DiameterLabel" xml:space="preserve">
    <value>Diameter</value>
  </data>
  <data name="DrillPairsLabel" xml:space="preserve">
    <value>Drill Pairs</value>
  </data>
  <data name="DrillPairsTabHeader" xml:space="preserve">
    <value>Drill pairs</value>
  </data>
  <data name="ECRuleTitle" xml:space="preserve">
    <value>Electrical Clearance</value>
  </data>
  <data name="ExpansionLabel" xml:space="preserve">
    <value>Expansion</value>
  </data>
  <data name="ExportLayersTooltip" xml:space="preserve">
    <value>Export layers ...</value>
  </data>
  <data name="ExportRulesTooltip" xml:space="preserve">
    <value>Export rules ...</value>
  </data>
  <data name="FileExtensionColumnHeader" xml:space="preserve">
    <value>Extension</value>
  </data>
  <data name="FormatLabel" xml:space="preserve">
    <value>Format</value>
  </data>
  <data name="GeneralTabHeader" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="GerberFileNameColumnHeader" xml:space="preserve">
    <value>Gerber File Name</value>
  </data>
  <data name="GerberFilesLabel" xml:space="preserve">
    <value>Gerber Files</value>
  </data>
  <data name="GroupByLabel" xml:space="preserve">
    <value>Group by</value>
  </data>
  <data name="GroupRuleTitle" xml:space="preserve">
    <value>Group</value>
  </data>
  <data name="HeaderColumnHeader" xml:space="preserve">
    <value>Header</value>
  </data>
  <data name="HoleLabel" xml:space="preserve">
    <value>Hole</value>
  </data>
  <data name="ImportLayersTooltip" xml:space="preserve">
    <value>Import layers ...</value>
  </data>
  <data name="ImportRulesTooltip" xml:space="preserve">
    <value>Import rules ...</value>
  </data>
  <data name="LayerColorColumnHeader" xml:space="preserve">
    <value>Layer Color</value>
  </data>
  <data name="LayerGroupsLabel" xml:space="preserve">
    <value>Layer Groups</value>
  </data>
  <data name="LayerGroupsTabHeader" xml:space="preserve">
    <value>Layer groups</value>
  </data>
  <data name="LayerMaterialColumnHeader" xml:space="preserve">
    <value>Material</value>
  </data>
  <data name="LayerNameColumnHeader" xml:space="preserve">
    <value>Layer Name</value>
  </data>
  <data name="LayerPairsLabel" xml:space="preserve">
    <value>Layer Pairs</value>
  </data>
  <data name="LayerPairsTabHeader" xml:space="preserve">
    <value>Layer pairs</value>
  </data>
  <data name="LayersTabHeader" xml:space="preserve">
    <value>Layers</value>
  </data>
  <data name="LayerStackupSpecTooltip" xml:space="preserve">
    <value>Choose to display either all layers or the stack up for this board</value>
  </data>
  <data name="LayersText" xml:space="preserve">
    <value>Layers</value>
  </data>
  <data name="LayerThicknessColumnHeader" xml:space="preserve">
    <value>Thickness (mm)</value>
  </data>
  <data name="LayerTypeColumnHeader" xml:space="preserve">
    <value>Layer Type</value>
  </data>
  <data name="LoadingStatusText" xml:space="preserve">
    <value>Loading ...</value>
  </data>
  <data name="ManufacturingClearanceRuleTitle" xml:space="preserve">
    <value>Manufacturing clearance</value>
  </data>
  <data name="ManufacturingHoleSizeRuleTitle" xml:space="preserve">
    <value>Hole size</value>
  </data>
  <data name="ManufacturingTabHeader" xml:space="preserve">
    <value>Manufacturing</value>
  </data>
  <data name="MaskExpansionRuleTitle" xml:space="preserve">
    <value>Mask expansion</value>
  </data>
  <data name="MirrorColumnHeader" xml:space="preserve">
    <value>Mirror</value>
  </data>
  <data name="MoveDownTooltip" xml:space="preserve">
    <value>Move down</value>
  </data>
  <data name="MoveUpTooltip" xml:space="preserve">
    <value>Move up</value>
  </data>
  <data name="NCDrillFilesTitle" xml:space="preserve">
    <value>NC Drill Files</value>
  </data>
  <data name="NoSchematicReferenceLabelText" xml:space="preserve">
    <value>This board doesn't have a referenced schematic</value>
  </data>
  <data name="NotSetText" xml:space="preserve">
    <value>Not set</value>
  </data>
  <data name="OutputTabHeader" xml:space="preserve">
    <value>Output</value>
  </data>
  <data name="PickAndPlaceFilesText" xml:space="preserve">
    <value>Pick and place files</value>
  </data>
  <data name="PlotColumnHeader" xml:space="preserve">
    <value>Plot</value>
  </data>
  <data name="PlotOutlineOnAllLayers" xml:space="preserve">
    <value>Plot board outline on all layers</value>
  </data>
  <data name="Preview3DDisplayCopperAsLayerColors" xml:space="preserve">
    <value>Display copper as layer colors</value>
  </data>
  <data name="Preview3DShowDielectric" xml:space="preserve">
    <value>Show dielectric</value>
  </data>
  <data name="Preview3DShowParts" xml:space="preserve">
    <value>Show parts</value>
  </data>
  <data name="Preview3DShowPcb" xml:space="preserve">
    <value>Show PCB</value>
  </data>
  <data name="Preview3DShowSolderMask" xml:space="preserve">
    <value>Show solder mask</value>
  </data>
  <data name="Preview3DSilkscreenColor" xml:space="preserve">
    <value>Silkscreen color</value>
  </data>
  <data name="Preview3DSolderMaskColor" xml:space="preserve">
    <value>Solder mask color</value>
  </data>
  <data name="RemoveLayerGroupTooltip" xml:space="preserve">
    <value>Remove selected layer group</value>
  </data>
  <data name="RemoveRuleTooltip" xml:space="preserve">
    <value>Remove selected node</value>
  </data>
  <data name="RuleCommentLabel" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="RuleDefaultValueLabel" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="RuleEnabledLabel" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="RuleFilterByDrillPair" xml:space="preserve">
    <value>Filter by drill pair</value>
  </data>
  <data name="RuleFilterByLabel" xml:space="preserve">
    <value>Filter by</value>
  </data>
  <data name="RuleFilterFirstObjectLabel" xml:space="preserve">
    <value>Filter first object by</value>
  </data>
  <data name="RuleFilterSecondObjectLabel" xml:space="preserve">
    <value>Filter second object by</value>
  </data>
  <data name="RuleLayerNameHeader" xml:space="preserve">
    <value>Layer</value>
  </data>
  <data name="RuleMaxValueLabel" xml:space="preserve">
    <value>Max</value>
  </data>
  <data name="RuleMinValueLabel" xml:space="preserve">
    <value>Min</value>
  </data>
  <data name="RuleNameLabel" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="RulesTabHeader" xml:space="preserve">
    <value>Rules</value>
  </data>
  <data name="Separator" xml:space="preserve">
    <value>Separator</value>
  </data>
  <data name="SetSchematicReferenceButtonText" xml:space="preserve">
    <value>Set schematic reference</value>
  </data>
  <data name="ShowBoardButtonText" xml:space="preserve">
    <value>Show board</value>
  </data>
  <data name="ShowColumnHeader" xml:space="preserve">
    <value>Show</value>
  </data>
  <data name="StackupTabHeader" xml:space="preserve">
    <value>Stackup</value>
  </data>
  <data name="StartLayerColumnHeader" xml:space="preserve">
    <value>Start Layer</value>
  </data>
  <data name="StopLayerColumnHeader" xml:space="preserve">
    <value>Stop Layer</value>
  </data>
  <data name="ThereAreDetectedSchematicChangesLabelText" xml:space="preserve">
    <value>There are changes detected in schematic</value>
  </data>
  <data name="TopLayerColumnHeader" xml:space="preserve">
    <value>Top Layer</value>
  </data>
  <data name="TotalBoardThicknessLabel" xml:space="preserve">
    <value>Total thickness:</value>
  </data>
  <data name="TrackWidthRuleTitle" xml:space="preserve">
    <value>Track width</value>
  </data>
  <data name="Units" xml:space="preserve">
    <value>Units</value>
  </data>
  <data name="UpdateBoardFromSchematicButtonText" xml:space="preserve">
    <value>Update board from schematic</value>
  </data>
  <data name="VersionLabel" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="ViaDefinitionRuleTitle" xml:space="preserve">
    <value>Via definition</value>
  </data>
  <data name="WriteGerberMetadata" xml:space="preserve">
    <value>Write Gerber attributes (GerberX2)</value>
  </data>
  <data name="WriteNetListAttributes" xml:space="preserve">
    <value>Write net-list attributes (GerberX2)</value>
  </data>
</root>