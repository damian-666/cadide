//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.ComponentModel;
using System.Xml.Serialization;

// 
// This source code was auto-generated by xsd, Version=4.6.81.0.
// 

namespace Eagle
{



    public partial class eagle
    {

        [XmlAttribute]
        public string version
        {
            get; set;
        }

        [XmlElement]
        public compatibility compatibility
        {
            get; set;
        }

        [XmlElement]
        public drawing drawing
        {
            get; set;
        }


    }



    public partial class compatibility
    {

        [XmlElement("note")]
        public List<note> notes
        {
            get; set;
        }
    }


    public partial class note
    {




        [XmlAttribute]
        public string version
        {
            get; set;
        }


        [XmlAttribute]
        public noteSeverity severity
        {
            get; set;
        }


        [XmlText]
        public string Value
        {
            get; set;
        }
    }



    public enum noteSeverity
    {

        info,

        warning,

        error,
    }



    public partial class drawing
    {


        public settings settings
        {
            get; set;
        }

        public grid grid
        {
            get; set;
        }

        public layers layers
        {
            get; set;
        }

        /// <summary>
        /// this should be a base class. It is either a board, library or schematic
        /// </summary>
        [XmlElement("board", typeof(board))]
        [XmlElement("library", typeof(library))]
        [XmlElement("schematic", typeof(schematic))]
        public object Item
        {
            get; set;
        }
    }



    public partial class settings
    {
        [XmlElement("setting")]
        public List<setting> Settings
        {
            get; set;
        }
    }


    public partial class setting
    {


        public setting()
        {
            verticaltext = settingVerticaltext.up;
        }

        [XmlAttribute]
        public settingAlwaysvectorfont alwaysvectorfont
        {
            get; set;
        }



        [XmlAttribute]
        public settingVerticaltext verticaltext
        {
            get; set;
        }
    }


    public enum settingAlwaysvectorfont
    {

        no,

        yes,
    }



    public enum settingVerticaltext
    {

        up,

        down,
    }



    public partial class grid
    {



        public grid()
        {
            style = gridStyle.lines;
            multiple = 1;
            display = gridDisplay.no;
        }

        [XmlAttribute]
        public double distance
        {
            get; set;
        }

        [XmlAttribute]
        public gridUnitdist unitdist
        {
            get; set;
        }



        [XmlAttribute]
        public gridUnit unit
        {
            get; set;
        }



        [XmlAttribute]
        public gridStyle style
        {
            get; set;
        }

        [XmlAttribute]
        public int multiple
        {
            get; set;
        }


        [XmlAttribute()]
        public gridDisplay display
        {
            get; set;
        }


        [XmlAttribute()]
        public string altdistance
        {
            get; set;
        }


        [XmlAttribute()]
        public gridAltunitdist altunitdist
        {
            get; set;
        }




        [XmlAttribute()]
        public gridAltunit altunit
        {
            get; set;
        }


    }


    public enum gridUnitdist
    {


        mic,


        mm,


        mil,


        inch,
    }



    public enum gridUnit
    {

        mic,

        mm,

        mil,

        inch,
    }



    public enum gridStyle
    {


        lines,


        dots,
    }



    public enum gridDisplay
    {


        no,


        yes,
    }



    public enum gridAltunitdist
    {


        mic,


        mm,


        mil,


        inch,
    }



    public enum gridAltunit
    {


        mic,


        mm,


        mil,


        inch,
    }



    public partial class layers
    {



        [XmlElement("layer")]
        public List<layer> Layers
        {
            get; set;
        }
    }



    public partial class layer
    {



        public layer()
        {
            visible = layerVisible.yes;
            active = layerActive.yes;
        }


        [XmlAttribute()]
        public int number
        {
            get; set;
        }


        [XmlAttribute()]
        public string name
        {
            get; set;
        }


        [XmlAttribute()]
        public int color
        {
            get; set;
        }


        [XmlAttribute()]
        public string fill
        {
            get; set;
        }


        [XmlAttribute()]
        public layerVisible visible
        {
            get; set;
        }


        [XmlAttribute()]
        public layerActive active
        {
            get; set;
        }
    }



    public enum layerVisible
    {


        no,


        yes,
    }



    public enum layerActive
    {


        no,


        yes,
    }



    public partial class board
    {
        public description description
        {
            get; set;
        }


        //[System.Xml.Serialization.XmlArrayItemAttribute("circle", typeof(circle), IsNullable = false)]
        //[System.Xml.Serialization.XmlArrayItemAttribute("dimension", typeof(dimension), IsNullable = false)]
        //[System.Xml.Serialization.XmlArrayItemAttribute("frame", typeof(frame), IsNullable = false)]
        //[System.Xml.Serialization.XmlArrayItemAttribute("hole", typeof(hole), IsNullable = false)]
        //[System.Xml.Serialization.XmlArrayItemAttribute("polygon", typeof(polygon), IsNullable = false)]
        //[System.Xml.Serialization.XmlArrayItemAttribute("rectangle", typeof(rectangle), IsNullable = false)]
        //[System.Xml.Serialization.XmlArrayItemAttribute("text", typeof(text), IsNullable = false)]
        //[System.Xml.Serialization.XmlArrayItemAttribute("wire", typeof(wire), IsNullable = false)]
        //public object[] plain
        //{
        //    get
        //    {
        //        return this.plainField;
        //    }
        //    set
        //    {
        //        this.plainField = value;
        //    }
        //}

        [XmlElement]
        public plain plain { get; set; }


        public libraries libraries
        {
            get; set;
        }


        public attributes attributes
        {
            get; set;
        }


        public variantdefs variantdefs
        {
            get; set;
        }


        public classes classes
        {
            get; set;
        }


        public designrules designrules
        {
            get; set;
        }


        public autorouter autorouter
        {
            get; set;
        }


        public elements elements
        {
            get; set;
        }


        public signals signals
        {
            get; set;
        }


        public errors errors
        {
            get; set;
        }
    }



    public partial class description
    {


        public description()
        {
        }


        [XmlAttribute()]
        public string language
        {
            get; set;
        }


        [XmlText]
        public string Value
        {
            get; set;
        }
    }



    public partial class circle
    {

        [XmlAttribute()]
        public double x
        {
            get; set;
        }


        [XmlAttribute()]
        public double y
        {
            get; set;
        }


        [XmlAttribute()]
        public double radius
        {
            get; set;
        }


        [XmlAttribute()]
        public double width
        {
            get; set;
        }


        [XmlAttribute()]
        public int layer
        {
            get; set;
        }
    }



    public partial class dimension
    {



        public dimension()
        {
            this.dtype = dimensionDtype.parallel;
            this.textratio = 8;
            unit = dimensionUnit.mm;
            precision = 2;

        }


        [XmlAttribute()]
        public double x1
        {
            get; set;
        }


        [XmlAttribute()]
        public double y1
        {
            get; set;
        }


        [XmlAttribute()]
        public double x2
        {
            get; set;
        }


        [XmlAttribute()]
        public double y2
        {
            get; set;
        }


        [XmlAttribute()]
        public double x3
        {
            get; set;
        }


        [XmlAttribute()]
        public double y3
        {
            get; set;
        }


        [XmlAttribute()]
        public int layer
        {
            get; set;
        }


        [XmlAttribute()]
        public dimensionDtype dtype
        {
            get; set;
        }


        [XmlAttribute()]
        public double width
        {
            get; set;
        }


        [XmlAttribute()]
        public double extwidth
        {
            get; set;
        }


        [XmlAttribute()]
        public double extlength
        {
            get; set;
        }


        [XmlAttribute()]
        public double extoffset
        {
            get; set;
        }


        [XmlAttribute()]
        public double textsize
        {
            get; set;
        }


        [XmlAttribute()]
        public int textratio
        {
            get; set;
        }


        [XmlAttribute()]
        public dimensionUnit unit
        {
            get; set;
        }


        [XmlAttribute()]
        public int precision
        {
            get; set;
        }


        [XmlAttribute()]
        public dimensionVisible visible
        {
            get; set;
        }
    }



    public enum dimensionDtype
    {


        parallel,


        horizontal,


        vertical,


        radius,


        diameter,


        leader,
    }



    public enum dimensionUnit
    {


        mic,


        mm,


        mil,


        inch,
    }



    public enum dimensionVisible
    {


        no,


        yes,
    }



    public partial class frame
    {



        public frame()
        {
        }


        [XmlAttribute()]
        public double x1
        {
            get; set;
        }


        [XmlAttribute()]
        public double y1
        {
            get; set;
        }


        [XmlAttribute()]
        public double x2
        {
            get; set;
        }


        [XmlAttribute()]
        public double y2
        {
            get; set;
        }


        [XmlAttribute()]
        public int columns
        {
            get; set;
        }


        [XmlAttribute()]
        public int rows
        {
            get; set;
        }


        [XmlAttribute()]
        public int layer
        {
            get; set;
        }


        [XmlAttribute("border-left")]
        public frameBorderleft borderleft
        {
            get; set;
        }


        [XmlAttribute("border-top")]
        public frameBordertop bordertop
        {
            get; set;
        }


        [XmlAttribute("border-right")]
        public frameBorderright borderright
        {
            get; set;
        }


        [XmlAttribute("border-bottom")]
        public frameBorderbottom borderbottom
        {
            get; set;
        }
    }



    public enum frameBorderleft
    {


        no,


        yes,
    }



    public enum frameBordertop
    {


        no,


        yes,
    }



    public enum frameBorderright
    {


        no,


        yes,
    }



    public enum frameBorderbottom
    {


        no,


        yes,
    }



    public partial class hole
    {



        [XmlAttribute()]
        public double x
        {
            get; set;
        }


        [XmlAttribute()]
        public double y
        {
            get; set;
        }


        [XmlAttribute()]
        public double drill
        {
            get; set;
        }
    }



    public partial class polygon
    {


        public polygon()
        {
        }


        [XmlElement("vertex")]
        public List<vertex> vertices
        {
            get; set;
        }


        [XmlAttribute()]
        public double width
        {
            get; set;
        }


        [XmlAttribute()]
        public int layer
        {
            get; set;
        }


        [XmlAttribute()]
        public double spacing
        {
            get; set;
        }


        [XmlAttribute()]
        public polygonPour pour
        {
            get; set;
        }


        [XmlAttribute()]
        public double isolate
        {
            get; set;
        }


        [XmlAttribute()]
        public polygonOrphans orphans
        {
            get; set;
        }


        [XmlAttribute()]
        public polygonThermals thermals
        {
            get; set;
        }


        [XmlAttribute()]
        public int rank
        {
            get; set;
        }
    }



    public partial class vertex
    {

        public vertex()
        {
        }


        [XmlAttribute()]
        public double x
        {
            get; set;
        }


        [XmlAttribute()]
        public double y
        {
            get; set;
        }


        [XmlAttribute()]
        public double curve
        {
            get; set;
        }
    }


    public enum polygonPour
    {


        solid,


        hatch,


        cutout,
    }


    public enum polygonOrphans
    {


        no,


        yes,
    }



    public enum polygonThermals
    {


        no,


        yes,
    }



    public partial class rectangle
    {


        public rectangle()
        {
        }


        [XmlAttribute()]
        public double x1
        {
            get; set;
        }


        [XmlAttribute()]
        public double y1
        {
            get; set;
        }


        [XmlAttribute()]
        public double x2
        {
            get; set;
        }


        [XmlAttribute()]
        public double y2
        {
            get; set;
        }


        [XmlAttribute()]
        public int layer
        {
            get; set;
        }


        [XmlAttribute()]
        public string rot
        {
            get; set;
        }

        //[XmlIgnore]
        //public double rotation
        //{
        //    get;set;
        //}
    }



    public partial class text
    {

        public text()
        {
            font = textFont.proportional;
            ratio = 8;
            rot = "R0";
            align = textAlign.bottomleft;
            distance = 50;
        }


        [XmlAttribute()]
        public double x
        {
            get; set;
        }


        [XmlAttribute()]
        public double y
        {
            get; set;
        }


        [XmlAttribute()]
        public double size
        {
            get; set;
        }


        [XmlAttribute()]
        public int layer
        {
            get; set;
        }


        [XmlAttribute()]
        public textFont font
        {
            get; set;
        }


        [XmlAttribute()]
        public int ratio
        {
            get; set;
        }


        [XmlAttribute()]
        public string rot
        {
            get; set;
        }


        [XmlAttribute()]
        public textAlign align
        {
            get; set;
        }


        [XmlAttribute()]
        public int distance
        {
            get; set;
        }


        [XmlText]
        public string Value
        {
            get; set;
        }
    }



    public enum textFont
    {


        vector,


        proportional,


        @fixed,
    }



    public enum textAlign
    {


        [System.Xml.Serialization.XmlEnumAttribute("bottom-left")]
        bottomleft,


        [System.Xml.Serialization.XmlEnumAttribute("bottom-center")]
        bottomcenter,


        [System.Xml.Serialization.XmlEnumAttribute("bottom-right")]
        bottomright,


        [System.Xml.Serialization.XmlEnumAttribute("center-left")]
        centerleft,


        center,


        [System.Xml.Serialization.XmlEnumAttribute("center-right")]
        centerright,


        [System.Xml.Serialization.XmlEnumAttribute("top-left")]
        topleft,


        [System.Xml.Serialization.XmlEnumAttribute("top-center")]
        topcenter,


        [System.Xml.Serialization.XmlEnumAttribute("top-right")]
        topright,
    }



    public partial class wire
    {



        public wire()
        {
            style = wireStyle.continuous;
            cap = wireCap.round;
        }


        [XmlAttribute()]
        public double x1
        {
            get; set;
        }


        [XmlAttribute()]
        public double y1
        {
            get; set;
        }


        [XmlAttribute()]
        public double x2
        {
            get; set;
        }


        [XmlAttribute()]
        public double y2
        {
            get; set;
        }


        [XmlAttribute()]
        public double width
        {
            get; set;
        }


        [XmlAttribute()]
        public int layer
        {
            get; set;
        }


        [XmlAttribute()]
        public string extent
        {
            get; set;
        }


        [XmlAttribute()]
        public wireStyle style
        {
            get; set;
        }


        [XmlAttribute()]
        public double curve
        {
            get; set;
        }


        [XmlAttribute()]
        public wireCap cap
        {
            get; set;
        }
    }


    public enum wireStyle
    {


        continuous,


        longdash,


        shortdash,


        dashdot,
    }


    public enum wireCap
    {


        flat,


        round,
    }


    public partial class libraries
    {


        [XmlElement("library")]
        public List<library> Libraries
        {
            get; set;
        }
    }


    public partial class library
    {
        public description description
        {
            get; set;
        }


        public packages packages
        {
            get; set;
        }


        public symbols symbols
        {
            get; set;
        }


        public devicesets devicesets
        {
            get; set;
        }


        [XmlAttribute()]
        public string name
        {
            get; set;
        }
    }


    public partial class packages
    {
        [XmlElement("package")]
        public List<package> Packages
        {
            get; set;
        }
    }


    public partial class package
    {
        public description description
        {
            get; set;
        }


        [XmlElement("circle", typeof(circle))]
        [XmlElement("dimension", typeof(dimension))]
        [XmlElement("frame", typeof(frame))]
        [XmlElement("hole", typeof(hole))]
        [XmlElement("pad", typeof(pad))]
        [XmlElement("polygon", typeof(polygon))]
        [XmlElement("rectangle", typeof(rectangle))]
        [XmlElement("smd", typeof(smd))]
        [XmlElement("text", typeof(text))]
        [XmlElement("wire", typeof(wire))]
        public List<object> Items
        {
            get; set;
        }


        [XmlAttribute()]
        public string name
        {
            get; set;
        }
    }


    public partial class pad
    {

        public pad()
        {
            rot = "R0";
            stop = padStop.yes;
            thermals = padThermals.yes;
            first = padFirst.no;
        }


        [XmlAttribute()]
        public string name
        {
            get; set;
        }


        [XmlAttribute()]
        public double x
        {
            get; set;
        }


        [XmlAttribute()]
        public double y
        {
            get; set;
        }


        [XmlAttribute()]
        public double drill
        {
            get; set;
        }


        [XmlAttribute()]
        public double diameter
        {
            get; set;
        }


        [XmlAttribute()]
        public padShape shape
        {
            get; set;
        }


        [XmlAttribute()]
        public string rot
        {
            get; set;
        }


        [XmlAttribute()]
        public padStop stop
        {
            get; set;
        }


        [XmlAttribute()]
        public padThermals thermals
        {
            get; set;
        }


        [XmlAttribute()]
        public padFirst first
        {
            get; set;
        }
    }


    public enum padShape
    {


        square,


        round,


        octagon,


        @long,


        offset,
    }


    public enum padStop
    {


        no,


        yes,
    }


    public enum padThermals
    {


        no,


        yes,
    }


    public enum padFirst
    {


        no,


        yes,
    }


    public partial class smd
    {

        public smd()
        {
            rot = "R0";
            stop = smdStop.yes;
            thermals = smdThermals.yes;
            cream = smdCream.yes;
        }


        [XmlAttribute()]
        public string name
        {
            get; set;
        }


        [XmlAttribute()]
        public double x
        {
            get; set;
        }


        [XmlAttribute()]
        public double y
        {
            get; set;
        }


        [XmlAttribute()]
        public double dx
        {
            get; set;
        }


        [XmlAttribute()]
        public double dy
        {
            get; set;
        }


        [XmlAttribute()]
        public int layer
        {
            get; set;
        }


        [XmlAttribute()]
        public int roundness
        {
            get; set;
        }


        [XmlAttribute()]
        public string rot
        {
            get; set;
        }


        [XmlAttribute()]
        public smdStop stop
        {
            get; set;
        }


        [XmlAttribute()]
        public smdThermals thermals
        {
            get; set;
        }


        [XmlAttribute()]
        public smdCream cream
        {
            get; set;
        }
    }


    public enum smdStop
    {


        no,


        yes,
    }


    public enum smdThermals
    {


        no,


        yes,
    }


    public enum smdCream
    {


        no,


        yes,
    }


    public partial class symbols
    {



        [XmlElement("symbol")]
        public List<symbol> Symbols
        {
            get; set;
        }
    }


    public partial class symbol
    {
        public description description
        {
            get; set;
        }


        [XmlElement("circle", typeof(circle))]
        [XmlElement("dimension", typeof(dimension))]
        [XmlElement("frame", typeof(frame))]
        [XmlElement("pin", typeof(pin))]
        [XmlElement("polygon", typeof(polygon))]
        [XmlElement("rectangle", typeof(rectangle))]
        [XmlElement("text", typeof(text))]
        [XmlElement("wire", typeof(wire))]
        public List<object> Items
        {
            get; set;
        }


        [XmlAttribute()]
        public string name
        {
            get; set;
        }
    }


    public partial class pin
    {



        public pin()
        {
            visible = pinVisible.both;
            length = pinLength.@long;
            direction = pinDirection.io;
            function = pinFunction.none;
            swaplevel = "0";
            rot = "R0";
        }


        [XmlAttribute()]
        public string name
        {
            get; set;
        }


        [XmlAttribute()]
        public double x
        {
            get; set;
        }


        [XmlAttribute()]
        public double y
        {
            get; set;
        }


        [XmlAttribute()]
        public pinVisible visible
        {
            get; set;
        }


        [XmlAttribute()]
        public pinLength length
        {
            get; set;
        }


        [XmlAttribute()]
        public pinDirection direction
        {
            get; set;
        }


        [XmlAttribute()]
        public pinFunction function
        {
            get; set;
        }


        [XmlAttribute()]
        public string swaplevel
        {
            get; set;
        }


        [XmlAttribute()]
        public string rot
        {
            get; set;
        }
    }


    public enum pinVisible
    {


        off,


        pad,


        pin,


        both,
    }


    public enum pinLength
    {


        point = 0,


        @short,


        middle,


        @long,
    }


    public enum pinDirection
    {


        nc,


        @in,


        @out,


        io,


        oc,


        pwr,


        pas,


        hiz,


        sup,
    }


    public enum pinFunction
    {


        none,


        dot,


        clk,


        dotclk,
    }


    public partial class devicesets
    {

        [XmlElement("deviceset")]
        public List<deviceset> DeviceSets
        {
            get; set;
        }
    }


    public partial class deviceset
    {



        public deviceset()
        {
            uservalue = devicesetUservalue.no;
        }


        public description description
        {
            get; set;
        }


        public gates gates
        {
            get; set;
        }


        public devices devices
        {
            get; set;
        }


        [XmlAttribute()]
        public string name
        {
            get; set;
        }


        [XmlAttribute()]
        public string prefix
        {
            get; set;
        }


        [XmlAttribute()]
        public devicesetUservalue uservalue
        {
            get; set;
        }
    }


    public partial class gates
    {



        [XmlElement("gate")]
        public List<gate> Gates
        {
            get; set;
        }
    }


    public partial class gate
    {



        public gate()
        {
            addlevel = gateAddlevel.next;
        }


        [XmlAttribute()]
        public string name
        {
            get; set;
        }


        [XmlAttribute()]
        public string symbol
        {
            get; set;
        }


        [XmlAttribute()]
        public double x
        {
            get; set;
        }


        [XmlAttribute()]
        public double y
        {
            get; set;
        }


        [XmlAttribute()]
        public gateAddlevel addlevel
        {
            get; set;
        }


        [XmlAttribute()]
        public int swaplevel
        {
            get; set;
        }
    }


    public enum gateAddlevel
    {


        must,


        can,


        next,


        request,


        always,
    }


    public partial class devices
    {



        [XmlElement("device")]
        public List<device> Devices
        {
            get; set;
        }
    }


    public partial class device
    {


        public device()
        {
        }


        public connects connects
        {
            get; set;
        }


        public technologies technologies
        {
            get; set;
        }


        [XmlAttribute()]
        public string name
        {
            get; set;
        }


        [XmlAttribute()]
        public string package
        {
            get; set;
        }
    }


    public partial class connects
    {

        [XmlElement("connect")]
        public List<connect> ConnectList
        {
            get; set;
        }
    }


    public partial class connect
    {
        public connect()
        {
            route = connectRoute.all;
        }


        [XmlAttribute()]
        public string gate
        {
            get; set;
        }


        [XmlAttribute()]
        public string pin
        {
            get; set;
        }


        [XmlAttribute()]
        public string pad
        {
            get; set;
        }


        [XmlAttribute()]
        public connectRoute route
        {
            get; set;
        }
    }


    public enum connectRoute
    {


        all,


        any,
    }


    public partial class technologies
    {
        [XmlElement("technology")]
        public List<technology> technologyList
        {
            get; set;
        }
    }


    public partial class technology
    {

        [XmlElement("attribute")]
        public List<attribute> attributes
        {
            get; set;
        }


        [XmlAttribute()]
        public string name
        {
            get; set;
        }
    }


    public partial class attribute
    {

        public attribute()
        {
            rot = "R0";
            display = attributeDisplay.value;
            constant = attributeConstant.no;
        }


        [XmlAttribute()]
        public string name
        {
            get; set;
        }


        [XmlAttribute()]
        public string value
        {
            get; set;
        }


        [XmlAttribute()]
        public double x
        {
            get; set;
        }


        [XmlAttribute()]
        public double y
        {
            get; set;
        }


        [XmlAttribute()]
        public double size
        {
            get; set;
        }


        [XmlAttribute()]
        public int layer
        {
            get; set;
        }


        [XmlAttribute()]
        public attributeFont font
        {
            get; set;
        }


        [XmlIgnore]
        public bool fontSpecified
        {
            get; set;
        }


        [XmlAttribute()]
        public int ratio
        {
            get; set;
        }


        [XmlAttribute()]
        public string rot
        {
            get; set;
        }


        [XmlAttribute()]
        public attributeDisplay display
        {
            get; set;
        }


        [XmlAttribute()]
        public attributeConstant constant
        {
            get; set;
        }
    }


    public enum attributeFont
    {


        vector,


        proportional,


        @fixed,
    }


    public enum attributeDisplay
    {


        off,


        value,


        name,


        both,
    }


    public enum attributeConstant
    {


        no,


        yes,
    }


    public enum devicesetUservalue
    {


        no,


        yes,
    }


    public partial class attributes
    {

        [XmlElement("attribute")]
        public List<attribute> Attributes
        {
            get; set;
        }
    }


    public partial class variantdefs
    {



        [XmlElement("variantdef")]
        public List<variantdef> Variants
        {
            get; set;
        }
    }


    public partial class variantdef
    {


        public variantdef()
        {
            current = variantdefCurrent.no;
        }


        [XmlAttribute()]
        public string name
        {
            get; set;
        }


        [XmlAttribute()]
        public variantdefCurrent current
        {
            get; set;
        }
    }


    public enum variantdefCurrent
    {


        no,


        yes,
    }


    public partial class classes
    {
        [XmlElement("class")]
        public List<@class> Classes
        {
            get; set;
        }
    }


    public partial class @class
    {


        public @class()
        {
        }


        [XmlElement("clearance")]
        public List<clearance> Clearances
        {
            get; set;
        }


        [XmlAttribute()]
        public int number
        {
            get; set;
        }


        [XmlAttribute()]
        public string name
        {
            get; set;
        }


        [XmlAttribute()]
        public double width
        {
            get; set;
        }


        [XmlAttribute()]
        public double drill
        {
            get; set;
        }
    }


    public partial class clearance
    {

        public clearance()
        {
        }


        [XmlAttribute()]
        public int @class
        {
            get; set;
        }


        [XmlAttribute()]
        public double value
        {
            get; set;
        }
    }


    public partial class designrules
    {


        [XmlElement("description")]
        public List<description> descriptions
        {
            get; set;
        }


        [XmlElement("param")]
        public List<param> Parameters
        {
            get; set;
        }


        [XmlAttribute()]
        public string name
        {
            get; set;
        }
    }


    public partial class param
    {


        [XmlAttribute()]
        public string name
        {
            get; set;
        }


        [XmlAttribute()]
        public string value
        {
            get; set;
        }
    }


    public partial class autorouter
    {

        [XmlElement("pass")]
        public List<pass> passes
        {
            get; set;
        }
    }


    public partial class pass
    {

        public pass()
        {
            active = passActive.yes;
        }


        [XmlElement("param")]
        public List<param> parameters
        {
            get; set;
        }


        [XmlAttribute()]
        public string name
        {
            get; set;
        }


        [XmlAttribute()]
        public string refer
        {
            get; set;
        }


        [XmlAttribute()]
        public passActive active
        {
            get; set;
        }
    }


    public enum passActive
    {


        no,


        yes,
    }


    public partial class elements
    {



        [XmlElement("element")]
        public List<element> Elements
        {
            get; set;
        }
    }


    public partial class element
    {

        public element()
        {
            locked = elementLocked.no;
            populate = elementPopulate.yes;
            smashed = elementSmashed.no;
            rot = "R0";
        }


        [XmlElement("attribute")]
        public List<attribute> attributes
        {
            get; set;
        }


        [XmlElement("variant")]
        public List<variant> variants
        {
            get; set;
        }


        [XmlAttribute()]
        public string name
        {
            get; set;
        }


        [XmlAttribute()]
        public string library
        {
            get; set;
        }


        [XmlAttribute()]
        public string package
        {
            get; set;
        }


        [XmlAttribute()]
        public string value
        {
            get; set;
        }


        [XmlAttribute()]
        public double x
        {
            get; set;
        }


        [XmlAttribute()]
        public double y
        {
            get; set;
        }


        [XmlAttribute()]
        public elementLocked locked
        {
            get; set;
        }


        [XmlAttribute()]
        public elementPopulate populate
        {
            get; set;
        }


        [XmlAttribute()]
        public elementSmashed smashed
        {
            get; set;
        }


        [XmlAttribute()]
        public string rot
        {
            get; set;
        }
    }


    public partial class variant
    {


        public variant()
        {
            populate = variantPopulate.yes;
        }


        [XmlAttribute()]
        public string name
        {
            get; set;
        }


        [XmlAttribute()]
        public variantPopulate populate
        {
            get; set;
        }


        [XmlAttribute()]
        public string value
        {
            get; set;
        }


        [XmlAttribute()]
        public string technology
        {
            get; set;
        }
    }


    public enum variantPopulate
    {


        no,


        yes,
    }


    public enum elementLocked
    {


        no,


        yes,
    }


    public enum elementPopulate
    {


        no,


        yes,
    }


    public enum elementSmashed
    {


        no,


        yes,
    }


    public partial class signals
    {
        [XmlElement("signal")]
        public List<signal> Signals
        {
            get; set;
        }
    }


    public partial class signal
    {
        public signal()
        {
        }


        [XmlElement("contactref", typeof(contactref))]
        [XmlElement("polygon", typeof(polygon))]
        [XmlElement("via", typeof(via))]
        [XmlElement("wire", typeof(wire))]
        public object[] Items
        {
            get; set;
        }


        [XmlAttribute()]
        public string name
        {
            get; set;
        }


        [XmlAttribute()]
        public int @class
        {
            get; set;
        }


        [XmlAttribute()]
        public signalAirwireshidden airwireshidden
        {
            get; set;
        }
    }


    public partial class contactref
    {

        public contactref()
        {
            route = contactrefRoute.all;
        }


        [XmlAttribute()]
        public string element
        {
            get; set;
        }


        [XmlAttribute()]
        public string pad
        {
            get; set;
        }


        [XmlAttribute()]
        public contactrefRoute route
        {
            get; set;
        }


        [XmlAttribute()]
        public string routetag
        {
            get; set;
        }
    }


    public enum contactrefRoute
    {


        all,


        any,
    }


    public partial class via
    {

        public via()
        {
            shape = viaShape.round;
            alwaysstop = viaAlwaysstop.no;
        }


        [XmlAttribute()]
        public double x
        {
            get; set;
        }


        [XmlAttribute()]
        public double y
        {
            get; set;
        }


        [XmlAttribute()]
        public string extent
        {
            get; set;
        }


        [XmlAttribute()]
        public double drill
        {
            get; set;
        }


        [XmlAttribute()]
        public double diameter
        {
            get; set;
        }


        [XmlAttribute()]
        public viaShape shape
        {
            get; set;
        }


        [XmlAttribute()]
        public viaAlwaysstop alwaysstop
        {
            get; set;
        }
    }


    public enum viaShape
    {


        square,


        round,


        octagon,
    }


    public enum viaAlwaysstop
    {


        no,


        yes,
    }


    public enum signalAirwireshidden
    {


        no,


        yes,
    }


    public partial class errors
    {


        [XmlElement("approved")]
        public List<approved> approvedList
        {
            get; set;
        }
    }


    public partial class approved
    {

        [XmlAttribute()]
        public string hash
        {
            get; set;
        }
    }


    public partial class schematic
    {

        public description description
        {
            get; set;
        }


        public libraries libraries
        {
            get; set;
        }


        public attributes attributes
        {
            get; set;
        }


        public variantdefs variantdefs
        {
            get; set;
        }


        public classes classes
        {
            get; set;
        }


        public modules modules
        {
            get; set;
        }


        public parts parts
        {
            get; set;
        }


        public sheets sheets
        {
            get; set;
        }


        public errors errors
        {
            get; set;
        }


        //[XmlAttribute()]
        //public string xreflabel
        //{
        //    get; set;
        //}


        //[XmlAttribute()]
        //public string xrefpart
        //{
        //    get; set;
        //}
    }


    public partial class modules
    {



        [XmlElement("module")]
        public List<module> Modules
        {
            get; set;
        }
    }



    public partial class module
    {


        public module()
        {

        }


        public description description
        {
            get; set;
        }


        public ports ports
        {
            get; set;
        }


        public variantdefs variantdefs
        {
            get; set;
        }


        public parts parts
        {
            get; set;
        }


        public sheets sheets
        {
            get; set;
        }


        [XmlAttribute()]
        public string name
        {
            get; set;
        }


        [XmlAttribute()]
        public string prefix
        {
            get; set;
        }


        [XmlAttribute()]
        public double dx
        {
            get; set;
        }


        [XmlAttribute()]
        public double dy
        {
            get; set;
        }
    }


    public partial class ports
    {

        [XmlElement("port")]
        public List<port> Ports
        {
            get; set;
        }
    }


    public partial class port
    {


        public port()
        {
            direction = portDirection.io;
        }


        [XmlAttribute()]
        public string name
        {
            get; set;
        }


        [XmlAttribute()]
        public int side
        {
            get; set;
        }


        [XmlAttribute()]
        public double coord
        {
            get; set;
        }


        [XmlAttribute()]
        public portDirection direction
        {
            get; set;
        }
    }


    public enum portDirection
    {


        nc,


        @in,


        @out,


        io,


        oc,


        pwr,


        pas,


        hiz,
    }


    public partial class parts
    {


        [XmlElement("part")]
        public List<part> Parts
        {
            get; set;
        }
    }


    public partial class part
    {

        public part()
        {
        }


        [XmlElement("attribute")]
        public List<attribute> attributes
        {
            get; set;
        }


        [XmlElement("variant")]
        public List<variant> variants
        {
            get; set;
        }


        [XmlAttribute()]
        public string name
        {
            get; set;
        }


        [XmlAttribute()]
        public string library
        {
            get; set;
        }


        [XmlAttribute()]
        public string deviceset
        {
            get; set;
        }


        [XmlAttribute()]
        public string device
        {
            get; set;
        }


        [XmlAttribute()]
        public string technology
        {
            get; set;
        }


        [XmlAttribute()]
        public string value
        {
            get; set;
        }
    }


    public partial class sheets
    {

        [XmlElement("sheet")]
        public List<sheet> Sheets
        {
            get; set;
        }
    }


    public partial class sheet
    {
        public description description
        {
            get; set;
        }


        //[XmlArrayItem("circle", typeof(circle), IsNullable = false)]
        //[XmlArrayItem("dimension", typeof(dimension), IsNullable = false)]
        //[XmlArrayItem("frame", typeof(frame), IsNullable = false)]
        //[XmlArrayItem("hole", typeof(hole), IsNullable = false)]
        //[XmlArrayItem("polygon", typeof(polygon), IsNullable = false)]
        //[XmlArrayItem("rectangle", typeof(rectangle), IsNullable = false)]
        //[XmlArrayItem("text", typeof(text), IsNullable = false)]
        //[XmlArrayItem("wire", typeof(wire), IsNullable = false)]
        //public object[] plain
        //{
        //    get; set;
        //}

        public plain plain { get; set; }


        public moduleinsts moduleinsts
        {
            get; set;
        }


        public instances instances
        {
            get; set;
        }


        public busses busses
        {
            get; set;
        }


        public nets nets
        {
            get; set;
        }
    }


    public partial class moduleinsts
    {



        [XmlElement("moduleinst")]
        public List<moduleinst> Modules
        {
            get; set;
        }
    }


    public partial class moduleinst
    {



        public moduleinst()
        {
            rot = "R0";
        }


        [XmlElement("attribute")]
        public List<attribute> attributes
        {
            get; set;
        }


        [XmlAttribute()]
        public string name
        {
            get; set;
        }


        [XmlAttribute()]
        public string module
        {
            get; set;
        }


        [XmlAttribute()]
        public string modulevariant
        {
            get; set;
        }


        [XmlAttribute()]
        public double x
        {
            get; set;
        }


        [XmlAttribute()]
        public double y
        {
            get; set;
        }


        [XmlAttribute()]
        public int offset
        {
            get; set;
        }


        [XmlAttribute()]
        public moduleinstSmashed smashed
        {
            get; set;
        }


        [XmlAttribute()]
        public string rot
        {
            get; set;
        }
    }


    public enum moduleinstSmashed
    {


        no,


        yes,
    }


    public partial class instances
    {

        [XmlElement("instance")]
        public List<instance> Instances
        {
            get; set;
        }
    }


    public partial class instance
    {



        public instance()
        {
            rot = "R0";
        }


        [XmlElement("attribute")]
        public List<attribute> attributes
        {
            get; set;
        }


        [XmlAttribute()]
        public string part
        {
            get; set;
        }


        [XmlAttribute()]
        public string gate
        {
            get; set;
        }


        [XmlAttribute()]
        public double x
        {
            get; set;
        }


        [XmlAttribute()]
        public double y
        {
            get; set;
        }


        [XmlAttribute()]
        public instanceSmashed smashed
        {
            get; set;
        }


        [XmlAttribute()]
        public string rot
        {
            get; set;
        }
    }


    public enum instanceSmashed
    {


        no,


        yes,
    }


    public partial class busses
    {
        [XmlElement("bus")]
        public List<bus> Buses
        {
            get; set;
        }
    }


    public partial class bus
    {

        //private object[][] segmentField;

        //private string nameField;


        //[System.Xml.Serialization.XmlArrayItemAttribute("junction", typeof(junction), IsNullable = false)]
        //[System.Xml.Serialization.XmlArrayItemAttribute("label", typeof(label), IsNullable = false)]
        //[System.Xml.Serialization.XmlArrayItemAttribute("pinref", typeof(pinref), IsNullable = false)]
        //[System.Xml.Serialization.XmlArrayItemAttribute("portref", typeof(portref), IsNullable = false)]
        //[System.Xml.Serialization.XmlArrayItemAttribute("wire", typeof(wire), IsNullable = false)]
        //public object[][] segment
        //{
        //    get
        //    {
        //        return this.segmentField;
        //    }
        //    set
        //    {
        //        this.segmentField = value;
        //    }
        //}

        [XmlElement("segment")]
        public List<segment> Segments { get; set; }


        [XmlAttribute()]
        public string name
        {
            get; set;
        }
    }


    public partial class junction
    {

        [XmlAttribute()]
        public double x
        {
            get; set;
        }


        [XmlAttribute()]
        public double y
        {
            get; set;
        }
    }


    public partial class label
    {



        public label()
        {
            font = labelFont.proportional;
            ratio = 8;
            rot = "R0";
        }


        [XmlAttribute()]
        public double x
        {
            get; set;
        }


        [XmlAttribute()]
        public double y
        {
            get; set;
        }


        [XmlAttribute()]
        public double size
        {
            get; set;
        }


        [XmlAttribute()]
        public int layer
        {
            get; set;
        }


        [XmlAttribute()]
        public labelFont font
        {
            get; set;
        }


        [XmlAttribute()]
        public int ratio
        {
            get; set;
        }


        [XmlAttribute()]
        public string rot
        {
            get; set;
        }


        [XmlAttribute()]
        public labelXref xref
        {
            get; set;
        }
    }


    public enum labelFont
    {


        vector,


        proportional,


        @fixed,
    }


    public enum labelXref
    {


        no,


        yes,
    }


    public partial class pinref
    {


        [XmlAttribute()]
        public string part
        {
            get; set;
        }


        [XmlAttribute()]
        public string gate
        {
            get; set;
        }


        [XmlAttribute()]
        public string pin
        {
            get; set;
        }
    }


    public partial class portref
    {



        [XmlAttribute()]
        public string moduleinst
        {
            get; set;
        }


        [XmlAttribute()]
        public string port
        {
            get; set;
        }
    }


    public partial class nets
    {



        [XmlElement("net")]
        public List<net> Nets
        {
            get; set;
        }
    }


    public partial class net
    {

        public net()
        {
        }


        //[System.Xml.Serialization.XmlArrayItemAttribute("junction", typeof(junction), IsNullable = false)]
        //[System.Xml.Serialization.XmlArrayItemAttribute("label", typeof(label), IsNullable = false)]
        //[System.Xml.Serialization.XmlArrayItemAttribute("pinref", typeof(pinref), IsNullable = false)]
        //[System.Xml.Serialization.XmlArrayItemAttribute("portref", typeof(portref), IsNullable = false)]
        //[System.Xml.Serialization.XmlArrayItemAttribute("wire", typeof(wire), IsNullable = false)]
        //public object[][] segment
        //{
        //    get
        //    {
        //        return this.segmentField;
        //    }
        //    set
        //    {
        //        this.segmentField = value;
        //    }
        //}
        [XmlElement("segment")]
        public List<segment> Segments { get; set; }


        [XmlAttribute()]
        public string name
        {
            get; set;
        }


        [XmlAttribute()]
        public string @class
        {
            get; set;
        }
    }


    public partial class segment
    {

        [XmlElement("junction", typeof(junction))]
        [XmlElement("label", typeof(label))]
        [XmlElement("pinref", typeof(pinref))]
        [XmlElement("portref", typeof(portref))]
        [XmlElement("wire", typeof(wire))]
        public List<object> Items
        {
            get; set;
        }
    }


    public partial class plain
    {


        [XmlElement("circle", typeof(circle))]
        [XmlElement("dimension", typeof(dimension))]
        [XmlElement("frame", typeof(frame))]
        [XmlElement("hole", typeof(hole))]
        [XmlElement("polygon", typeof(polygon))]
        [XmlElement("rectangle", typeof(rectangle))]
        [XmlElement("text", typeof(text))]
        [XmlElement("wire", typeof(wire))]
        public object[] Items
        {
            get; set;
        }
    }
}
