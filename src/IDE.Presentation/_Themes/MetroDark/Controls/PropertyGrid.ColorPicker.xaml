<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ide="http://xnocad.rgb/wpf"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:conv="clr-namespace:IDE.Core.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="PropertyGrid.ColorCanvas.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- =============================================================================== -->
    <!-- ColorPicker                                                                     -->
    <!-- =============================================================================== -->

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <Style x:Key="ColorItemContainerStyle"
           TargetType="{x:Type ListBoxItem}">
        <Style.Resources>

            <!--We need to re-copy the tooltip style because otherwise is not applied for color picker-->
            <Style TargetType="{x:Type ToolTip}">
                <Setter Property="Background"
                        Value="#999" />
                <Setter Property="Foreground"
                        Value="#FFFFFFFF" />
                <Setter Property="FontFamily"
                        Value="Trebuchet MS" />
                <Setter Property="FontSize"
                        Value="12" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="Padding"
                        Value="3,0,3,0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToolTip}">
                            <Border x:Name="Root"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="#19000000"
                                    CornerRadius="3">
                                <Border Margin="1"
                                        BorderBrush="#FF767676"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="3"
                                        Padding="4">
                                    <Border.Resources>
                                        <Storyboard x:Key="Visible State" />
                                        <Storyboard x:Key="Normal State" />
                                    </Border.Resources>
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1"
                                                             StartPoint="0.5,0">
                                            <GradientStop Color="#111"
                                                          Offset="0.004" />
                                            <GradientStop Color="#444"
                                                          Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <ContentPresenter Content="{TemplateBinding Content}"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      Cursor="{TemplateBinding Cursor}"
                                                      Margin="{TemplateBinding Padding}" />
                                </Border>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


        </Style.Resources>
        <Setter Property="ToolTip"
                Value="{Binding Name}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid x:Name="mainGrid">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                        <Border BorderThickness="1"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                x:Name="_outerBorder"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch">
                            <Border Background="Transparent"
                                    BorderThickness="1"
                                    BorderBrush="Transparent"
                                    x:Name="_innerBorder"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="_outerBorder"
                                    Property="BorderBrush"
                                    Value="#FFFF0000" />
                            <Setter TargetName="_innerBorder"
                                    Property="BorderBrush"
                                    Value="#FFFFFF00" />
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="True">
                            <Setter TargetName="_outerBorder"
                                    Property="BorderBrush"
                                    Value="#FFFF0000" />
                            <Setter TargetName="_innerBorder"
                                    Property="BorderBrush"
                                    Value="#FFFFFF00" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="ColorItemTemplate">
        <Grid>
            <Border Background="{StaticResource CheckerBrush}"
                    BorderBrush="White"
                    BorderThickness="1"
                    Margin="2,2,2,2">
                <Rectangle Width="14"
                           Height="14">
                    <Rectangle.Style>
                        <Style TargetType="Rectangle">
                            <Setter Property="Fill"
                                    Value="{Binding Color, Converter={x:Static conv:ColorToBrushConverter.Instance}}" />
                        </Style>
                    </Rectangle.Style>
                </Rectangle>
            </Border>
        </Grid>
    </DataTemplate>

    <Style x:Key="ColorPickerToggleButtonStyle"
           TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid SnapsToDevicePixels="True">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="True">
                                <ContentPresenter Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                            </Border>

                            <ToggleButton x:Name="ToggleButtonChrome"
                                          Grid.Column="1"
                                          Visibility="{Binding ShowDropDownButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ide:ColorPicker}, Converter={StaticResource BooleanToVisibilityConverter}}"
                                          IsChecked="{Binding IsOpen, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ide:ColorPicker}}"
                                          IsEnabled="{Binding IsEnabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ide:ColorPicker}}"
                                          Padding="0">

                                <Grid x:Name="arrowGlyph"
                                      IsHitTestVisible="False"
                                      Grid.Column="1"
                                      Margin="5">
                                    <Path x:Name="Arrow"
                                          Width="9"
                                          Height="5"
                                          Data="{DynamicResource DownArrowGeometry}"
                                          Fill="White"
                                          Margin="0,1,0,0" />
                                </Grid>
                            </ToggleButton>
                        </Grid>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Fill"
                                    TargetName="Arrow"
                                    Value="#AFAFAF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColorDisplayStyle"
           TargetType="ContentControl">
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border Background="{StaticResource CheckerBrush}">
                        <Rectangle Fill="{Binding SelectedColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ide:ColorPicker}, Converter={x:Static conv:ColorToBrushConverter.Instance}}" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding SelectedColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ide:ColorPicker}}"
                         Value="{x:Null}">
                <Setter Property="Visibility"
                        Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ColorListStyle"
           TargetType="ListBox">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Width="200" />

                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle"
                Value="{StaticResource ColorItemContainerStyle}" />
        <Setter Property="ItemTemplate"
                Value="{StaticResource ColorItemTemplate}" />
        <Setter Property="SelectionMode"
                Value="Single" />
    </Style>

    <Style TargetType="{x:Type ide:ColorPicker}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ColorPickerDarkBorderBrush}" />
        <Setter Property="BorderThickness"
                Value="1,1,0,1" />
        <Setter Property="ButtonStyle"
                Value="{StaticResource ColorPickerToggleButtonStyle}" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="MaxDropDownWidth"
                Value="250" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ide:ColorPicker}">
                    <Grid>
                        <ToggleButton x:Name="PART_ColorPickerToggleButton"
                                      IsTabStop="True"
                                      MinHeight="22"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Padding="{TemplateBinding Padding}"
                                      IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                      IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static conv:InverseBooleanConverter.Instance}}"
                                      Style="{TemplateBinding ButtonStyle}">
                            <Grid Margin="2">
                                <ContentControl x:Name="ColorOnly"
                                                Style="{StaticResource ColorDisplayStyle}" />

                                <Border x:Name="ColorAndName"
                                        Background="Transparent"
                                        Visibility="Hidden">
                                    <StackPanel Orientation="Horizontal">
                                        <ContentControl HorizontalAlignment="Left"
                                                        Width="20"
                                                        Margin="2,1,4,1"
                                                        Style="{StaticResource ColorDisplayStyle}"
                                                        BorderThickness="1"
                                                        BorderBrush="#FFC9CACA" />
                                        <TextBlock Text="{Binding SelectedColorText, RelativeSource={RelativeSource TemplatedParent}}"
                                                   VerticalAlignment="Center" />
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </ToggleButton>

                        <Popup x:Name="PART_ColorPickerPalettePopup"
                               VerticalAlignment="Bottom"
                               IsOpen="{Binding ElementName=PART_ColorPickerToggleButton, Path=IsChecked}"
                               StaysOpen="False"
                               AllowsTransparency="True"
                               Focusable="False"
                               HorizontalOffset="1"
                               VerticalOffset="1"
                               PopupAnimation="Slide"
                               ToolTip=""
                               Width="{TemplateBinding MaxDropDownWidth}">
                            <Popup.Resources>
                                <Style TargetType="ToolTip">
                                    <Style.Triggers>
                                        <Trigger Property="Content"
                                                 Value="{x:Static sys:String.Empty}">
                                            <Setter Property="Visibility"
                                                    Value="Collapsed" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Popup.Resources>
                            <Border BorderThickness="1"
                                    Background="{StaticResource PopupBackgroundBrush}"
                                    BorderBrush="{StaticResource ColorPickerDarkBorderBrush}"
                                    Padding="3">

                                <TabControl x:Name="ColorPickerTabControl"
                                            Background="Transparent"
                                            SelectedIndex="{Binding ColorMode, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static conv:EnumToIndexConverter.Instance}}">
                                    <TabControl.Resources>
                                        <ControlTemplate x:Key="TabItemTemplate"
                                                         TargetType="{x:Type TabItem}">
                                            <Grid x:Name="templateRoot"
                                                  SnapsToDevicePixels="true">
                                                <Border x:Name="mainBorder"
                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="1,1,1,0"
                                                        Background="Transparent"
                                                        Margin="0">
                                                    <Border x:Name="innerBorder"
                                                            BorderBrush="#ACACAC"
                                                            BorderThickness="1,1,1,0"
                                                            Background="Transparent"
                                                            Margin="-1"
                                                            Opacity="0" />
                                                </Border>
                                                <ContentPresenter x:Name="contentPresenter"
                                                                  ContentSource="Header"
                                                                  Focusable="False"
                                                                  HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                                  Margin="{TemplateBinding Padding}"
                                                                  RecognizesAccessKey="True"
                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                  VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                                                   Value="true" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Panel.ZIndex"
                                                            Value="1" />
                                                    <Setter Property="Margin"
                                                            Value="-2,-2,-2,0" />
                                                    <Setter Property="Opacity"
                                                            TargetName="innerBorder"
                                                            Value="1" />
                                                </MultiDataTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </TabControl.Resources>
                                    <TabItem x:Name="StandardTabItem"
                                             Header="{Binding StandardButtonHeader, RelativeSource={RelativeSource TemplatedParent}}"
                                             Template="{StaticResource TabItemTemplate}">

                                        <Grid x:Name="_colorPaletteHost"
                                              Margin="4">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>

                                            <!-- Available Colors -->
                                            <Grid Grid.Row="1"
                                                  Visibility="{TemplateBinding ShowAvailableColors, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition />
                                                    </Grid.RowDefinitions>
                                                    <TextBlock Text="{TemplateBinding AvailableColorsHeader}"
                                                               Background="Transparent"
                                                               Padding="2"
                                                               Margin="0,0,0,1" />
                                                    <ListBox x:Name="PART_AvailableColors"
                                                             Grid.Row="1"
                                                             ItemsSource="{Binding AvailableColors, RelativeSource={RelativeSource TemplatedParent}}"
                                                             Style="{StaticResource ColorListStyle}" />
                                                </Grid>
                                            </Grid>

                                            <!-- Standard Colors-->
                                            <Grid Grid.Row="2"
                                                  Visibility="{TemplateBinding ShowStandardColors, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition Height="Auto" />
                                                    </Grid.RowDefinitions>
                                                    <TextBlock Text="{TemplateBinding StandardColorsHeader}"
                                                               Background="Transparent"
                                                               Padding="2"
                                                               Margin="0,1,0,1" />
                                                    <ListBox x:Name="PART_StandardColors"
                                                             Grid.Row="1"
                                                             ItemsSource="{Binding StandardColors, RelativeSource={RelativeSource TemplatedParent}}"
                                                             Style="{StaticResource ColorListStyle}" />
                                                </Grid>
                                            </Grid>

                                        </Grid>
                                    </TabItem>

                                    <TabItem x:Name="AdvancedTabItem"
                                             Header="{Binding AdvancedButtonHeader, RelativeSource={RelativeSource TemplatedParent}}"
                                             Template="{StaticResource TabItemTemplate}">
                                        <!-- ColorCanvas -->
                                        <Grid x:Name="_colorCanvasHost"
                                              Margin="0,0,9,0"
                                              Width="{Binding MaxDropDownWidth, RelativeSource={RelativeSource TemplatedParent}}">
                                            <ScrollViewer HorizontalScrollBarVisibility="Auto"
                                                          VerticalScrollBarVisibility="Hidden">
                                                <ide:ColorCanvas Background="Transparent"
                                                                  BorderThickness="0"
                                                                  UsingAlphaChannel="{Binding UsingAlphaChannel, RelativeSource={RelativeSource TemplatedParent}}"
                                                                  SelectedColor="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}}" />
                                            </ScrollViewer>
                                        </Grid>

                                    </TabItem>
                                </TabControl>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="DisplayColorAndName"
                                 Value="True">
                            <Setter TargetName="ColorOnly"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            <Setter TargetName="ColorAndName"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>

                        <Trigger Property="ShowDropDownButton"
                                 Value="False">
                            <Setter Property="BorderThickness"
                                    Value="1" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
